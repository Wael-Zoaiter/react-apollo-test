{"version":3,"sources":["components/ui/card/Card.js","components/ui/error/Error.js","components/ui/loading/Loading.js","components/ui/pagination/Pagination.js","graphql/index.js","components/RepositoriesList.js","components/RepositoryDetail.js","components/Authentication.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","classname","className","react_default","a","createElement","concat","children","CardHeader","CardTitle","Tag","tag","CardText","CardBody","CardFooter","Error","status","message","Card_Card","Card_CardHeader","Card_CardTitle","Card_CardBody","Card_CardText","Link","to","Loading","role","Pagination","pagesNumber","aria-label","onClick","prevHandler","Object","toConsumableArray","Array","map","x","index","key","nextHandler","GET_TREND_REPOS","gql","_templateObject","GET_DETAILED_REPO","_templateObject2","REPOS_PER_PAGE","RepositoriesList","_nextPage","data","page","parseInt","_this","match","params","search","repositoryCount","nextPage","history","push","pathname","state","pageInfo","mode","_previousPage","goBack","_getQueryVariables","isNewPage","location","includes","after","endCursor","before","variables","query","first","type","_this2","this","react_apollo_browser_umd","_ref","loading","error","localStorage","getItem","Loading_Loading","Error_Error","RepositoriesList_ReposListViewer","Pagination_Pagination","Component","ReposListViewer","edges","repo","ownerName","node","owner","login","id","name","description","Card_CardFooter","Date","createdAt","toString","RepositoryDetail","_ref$match$params","_ref2","console","log","repository","stars","stargazers","totalCount","forks","href","url","isPrivate","isArchived","REDIRECT_URI","process","Authentication","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isLoading","token","code","window","setState","axios","get","then","res","setItem","err","Redirect","App","client","ApolloClient","uri","headers","authorization","BrowserRouter","basename","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mPAGaA,SAAO,SAAAC,GAChB,IAAIC,EAAYD,EAAME,WAAa,GACnC,OACIC,EAAAC,EAAAC,cAAA,OAAKH,UAAS,QAAAI,OAAUL,IACnBD,EAAMO,YAKNC,EAAa,SAAAR,GACtB,IAAIC,EAAYD,EAAME,WAAa,GACnC,OACIC,EAAAC,EAAAC,cAAA,OAAKH,UAAS,eAAAI,OAAiBL,IAC1BD,EAAMO,WAKNE,EAAY,SAAAT,GACrB,IAAMC,EAAYD,EAAME,WAAa,GAC/BQ,EAAMV,EAAMW,KAAO,KACzB,OACIR,EAAAC,EAAAC,cAACK,EAAD,CAAKR,UAAS,cAAAI,OAAgBL,IACzBD,EAAMO,WAKNK,EAAW,SAAAZ,GACpB,IAAMC,EAAYD,EAAME,WAAa,GACrC,OACIC,EAAAC,EAAAC,cAAA,KAAGH,UAAS,aAAAI,OAAeL,IACtBD,EAAMO,WAKNM,EAAW,SAAAb,GACpB,IAAIC,EAAYD,EAAME,WAAa,GACnC,OACIC,EAAAC,EAAAC,cAAA,OAAKH,UAAS,aAAAI,OAAeL,IACxBD,EAAMO,WAKNO,EAAa,SAAAd,GACtB,IAAIC,EAAYD,EAAME,WAAa,GACnC,OACIC,EAAAC,EAAAC,cAAA,OAAKH,UAAS,eAAAI,OAAiBL,IAC1BD,EAAMO,WC/CNQ,SAAQ,SAAAf,GACjB,IAAMgB,EAAShB,EAAMgB,QAAU,GACzBC,EAAUjB,EAAMiB,SAAW,uBAEjC,OACId,EAAAC,EAAAC,cAACa,EAAD,CAAMhB,UAAU,gBACZC,EAAAC,EAAAC,cAACc,EAAD,KACIhB,EAAAC,EAAAC,cAACe,EAAD,CAAWlB,UAAU,eAArB,SAA0Cc,IAE9Cb,EAAAC,EAAAC,cAACgB,EAAD,KACIlB,EAAAC,EAAAC,cAACiB,EAAD,KAAWL,GACXd,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,IAAItB,UAAU,gBAAvB,uBCdHuB,SAAU,SAAAzB,GACnB,IAAMC,EAAYD,EAAME,WAAa,GACrC,OACIC,EAAAC,EAAAC,cAAA,OAAKH,UAAS,kBAAAI,OAAoBL,IAC9BE,EAAAC,EAAAC,cAAA,OAAKH,UAAU,iBAAiBwB,KAAK,sBCJpCC,SAAa,SAAA3B,GACxB,IAAM4B,EAAc5B,EAAM4B,aAAe,KACzC,OACEzB,EAAAC,EAAAC,cAAA,OAAKH,UAAU,oBAAoB2B,aAAW,mBAC5C1B,EAAAC,EAAAC,cAAA,MAAIH,UAAU,cACZC,EAAAC,EAAAC,cAAA,MAAIH,UAAU,aACZC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,YAAY4B,QAAS9B,EAAM+B,aAA3C,aAGAH,GAAeI,OAAAC,EAAA,EAAAD,CAAIE,MAAMN,IAAcO,IAAI,SAACC,EAAGC,GAC7C,OACElC,EAAAC,EAAAC,cAAA,MAAIiC,IAAKD,EAAOnC,UAAU,aACxBC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,aAAamC,EAAQ,MAK7ClC,EAAAC,EAAAC,cAAA,MAAIH,UAAU,YAAY4B,QAAS9B,EAAMuC,aACvCpC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,aAAhB,o7CCnBH,IAAMsC,EAAkBC,IAAHC,KA6BfC,EAAoBF,IAAHG,KCzBxBC,EAAiB,GAEjBC,6MAEFC,UAAY,SAAAC,GAER,IAAMC,EAAOC,SAASC,EAAKnD,MAAMoD,MAAMC,OAAOJ,KAAM,IAIpD,GAAIA,GAFgBD,EAAKM,OAAOC,gBAAkBV,EAEzB,CACrB,IAAMW,EAAWP,EAAO,EACxBE,EAAKnD,MAAMyD,QAAQC,KAAK,CACpBC,SAAQ,SAAArD,OAAWkD,GACnBI,MAAO,CACHC,SAAUb,EAAKM,OAAOO,SACtBC,KAAM,cAMtBC,cAAgB,SAAAf,GAECE,SAASC,EAAKnD,MAAMoD,MAAMC,OAAOJ,KAAM,IAEzC,GACPE,EAAKnD,MAAMyD,QAAQO,YAI3BC,mBAAqB,WACjB,IAAMC,EAAYf,EAAKnD,MAAMmE,SAASR,SAASS,SAAS,QAElDP,EAAWV,EAAKnD,MAAMmE,SAASP,MAAQT,EAAKnD,MAAMmE,SAASP,MAAMC,SAAW,GAE5EC,EAAOX,EAAKnD,MAAMmE,SAASP,MAAQT,EAAKnD,MAAMmE,SAASP,MAAME,KAAO,GAGpEO,EAAQR,EAASS,WAAa,KAC9BC,EAASV,EAASS,WAAa,KAI/BE,EAAY,CAAEC,MAHN,eAGaC,MADbR,EAAYrB,EAAiB,IACT8B,KAFrB,cAKb,OAFIN,GAAkB,SAATP,IAAiBU,EAAUH,MAAQA,GAC5CE,GAAmB,SAATT,IAAiBU,EAAUD,OAASA,GAC3CC,2EAGF,IAAAI,EAAAC,KACL,OACI1E,EAAAC,EAAAC,cAAA,OAAKH,UAAU,WACXC,EAAAC,EAAAC,cAACyE,EAAA,MAAD,CACIL,MAAOjC,EACPgC,UAAWK,KAAKZ,sBAGZ,SAAAc,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOjC,EAAW+B,EAAX/B,KAEf,OAAIgC,IAAYE,aAAaC,QAAQ,SAAiBhF,EAAAC,EAAAC,cAAC+E,EAAD,MAElDH,EAAc9E,EAAAC,EAAAC,cAACgF,EAAD,MAGdlF,EAAAC,EAAAC,cAAA,OAAKH,UAAU,WACXC,EAAAC,EAAAC,cAACiF,EAAD,CAAiBtC,KAAMA,IACvB7C,EAAAC,EAAAC,cAACkF,EAAD,CACIhD,YAAa,kBAAMqC,EAAK7B,UAAUC,IAClCjB,YAAa,kBAAM6C,EAAKb,8BAnEjCyB,aA+EzBC,EAAkB,SAAAzF,GACpB,OACIG,EAAAC,EAAAC,cAAA,OAAKH,UAAU,aACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OAEPF,EAAMgD,KAAKM,OAAOoC,MAAMvD,IAAI,SAAAwD,GAExB,IAAMC,GADND,EAAOA,EAAKE,MACWC,MAAQH,EAAKG,MAAMC,MAAQ,GAClD,OACI5F,EAAAC,EAAAC,cAAA,OAAKiC,IAAKqD,EAAKK,GAAI9F,UAAU,UACzBC,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAE,IAAAlB,OAAMsF,EAAN,KAAAtF,OAAmBqF,EAAKM,OAC5B9F,EAAAC,EAAAC,cAACa,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAD,KAAayE,GACbzF,EAAAC,EAAAC,cAACgB,EAAD,KACIlB,EAAAC,EAAAC,cAACe,EAAD,KAAYuE,EAAKM,MACjB9F,EAAAC,EAAAC,cAACiB,EAAD,KAAWqE,EAAKO,cAEpB/F,EAAAC,EAAAC,cAAC8F,EAAD,KAAa,IAAIC,KAAKT,EAAKU,WAAWC,oBAY/DxD,ICvCAyD,EAxEU,SAAAxB,GAA4C,IAAAyB,EAAAzB,EAAzC3B,MAASC,OAAUyC,EAAsBU,EAAtBV,MAAOG,EAAeO,EAAfP,KAClD,OACI9F,EAAAC,EAAAC,cAAA,OAAKH,UAAU,uBACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,aACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,UACXC,EAAAC,EAAAC,cAACyE,EAAA,MAAD,CACIL,MAAO9B,EACP6B,UAAW,CACPyB,OACAH,UAIA,SAAAW,GAA8B,IAA3BzB,EAA2ByB,EAA3BzB,QAASC,EAAkBwB,EAAlBxB,MAAOjC,EAAWyD,EAAXzD,KACf,GAAIgC,EAAS,OAAO7E,EAAAC,EAAAC,cAAC+E,EAAD,MACpB,GAAIH,EAAO,OAAO9E,EAAAC,EAAAC,cAACgF,EAAD,MAClB,IAAKrC,EAAM,OAAO7C,EAAAC,EAAAC,cAACgF,EAAD,CAAOpE,QAAQ,qCACjCyF,QAAQC,IAAI3D,GACZ,IAAM2C,EAAO3C,EAAK4D,YAAc,GAC1Bd,EAAQH,EAAKG,MAAQH,EAAKG,MAAQ,GAClCe,EAAQlB,EAAKmB,YAAcnB,EAAKmB,WAAWC,WAC3CC,EAAQrB,EAAKqB,OAASrB,EAAKqB,MAAMD,WAEvC,OACI5G,EAAAC,EAAAC,cAACa,EAAD,CAAMoB,IAAKqD,EAAKK,IACZ7F,EAAAC,EAAAC,cAACc,EAAD,KACIhB,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,SACXC,EAAAC,EAAAC,cAAA,KAAG4G,KAAMnB,EAAMoB,KAAMpB,EAAMC,MAA3B,KACA5F,EAAAC,EAAAC,cAAA,SAAOH,UAAU,cAAcyF,EAAKwB,UAAY,UAAY,WAEhEhH,EAAAC,EAAAC,cAAA,OAAKH,UAAU,SAAf,UAA+B2G,GAC/B1G,EAAAC,EAAAC,cAAA,OAAKH,UAAU,SAAf,UAA+B8G,KAGvC7G,EAAAC,EAAAC,cAACgB,EAAD,KACIlB,EAAAC,EAAAC,cAACe,EAAD,KACKuE,EAAKM,MAEV9F,EAAAC,EAAAC,cAACiB,EAAD,KAAWqE,EAAKO,aAChB/F,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,UAGdyF,EAAKyB,YAAcjH,EAAAC,EAAAC,cAAA,OAAKH,UAAU,SAAf,cAK5BC,EAAAC,EAAAC,cAAC8F,EAAD,KACIhG,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACXC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,SACVkG,KAAKT,EAAKU,WAAWC,YAE1BnG,EAAAC,EAAAC,cAAA,OAAKH,UAAU,SACXC,EAAAC,EAAAC,cAAA,KAAG4G,KAAMtB,EAAKuB,IAAKhH,UAAU,mBAA7B,sCCvDlDmH,EAAe,iCAAA/G,OAAyEgH,sBAuC/EC,cApCf,SAAAA,EAAYvH,GAAO,IAAAmD,EAAA,OAAAnB,OAAAwF,EAAA,EAAAxF,CAAA6C,KAAA0C,IACjBpE,EAAAnB,OAAAyF,EAAA,EAAAzF,CAAA6C,KAAA7C,OAAA0F,EAAA,EAAA1F,CAAAuF,GAAAI,KAAA9C,KAAM7E,KAED4D,MAAQ,CACVgE,WAAW,EACXC,MAAO,MALO1E,mFASK,IAAAyB,EAAAC,KACViD,EAAOC,OAAO5D,SAAS8C,KAAK7D,MAAM,gBAAkB2E,OAAO5D,SAAS8C,KAAK7D,MAAM,eAAe,GAEjG0E,IACCjD,KAAKmD,SAAS,CACVJ,WAAW,IAEfK,IAAMC,IAAN,mDAAA5H,OAA6DwH,IAC5DK,KAAK,SAACC,GACAA,EAAIpF,KAAK6E,OAAO3C,aAAamD,QAAQ,QAASD,EAAIpF,KAAK6E,OAC1DjD,EAAKoD,SAAS,CACVJ,WAAW,EACXC,MAAOO,EAAIpF,KAAK6E,MAChB5C,MAAOmD,EAAIpF,KAAKiC,SAErB,SAACqD,GAAD,OAAS5B,QAAQC,IAAI2B,uCAI5B,OACAnI,EAAAC,EAAAC,cAAA,OAAKH,UAAU,0BACV2E,KAAKjB,MAAMgE,UAAYzH,EAAAC,EAAAC,cAAC+E,EAAD,MAAcP,KAAKjB,MAAMiE,MAAQ1H,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAU/G,GAAG,YAAerB,EAAAC,EAAAC,cAAA,KAAGH,UAAU,gBAAgB+G,KAAI,sDAAA3G,OAlChH,uBAkCgH,6BAAAA,OAA6F+G,IAA9H,6BA/BpE7B,aC0BdgD,mLArBX,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,iCACLC,QAAS,CACPC,cAAa,UAAAvI,OAAY4E,aAAaC,QAAQ,aAGlD,OACEhF,EAAAC,EAAAC,cAACyE,EAAA,eAAD,CAAgB2D,OAAQA,GACtBtI,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAQC,SAAUzB,sBAChBnH,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,KACE7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7B,IACjCpH,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWtG,IAC3C3C,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAW7C,IAC7CpG,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAOE,KAAK,IAAIC,UAAW,kBAAMjJ,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAU/G,GAAG,mBAfxCgE,aCCE6D,QACW,cAA7BtB,OAAO5D,SAASmF,UAEe,UAA7BvB,OAAO5D,SAASmF,UAEhBvB,OAAO5D,SAASmF,SAASlG,MACvB,2DCZNmG,IAASC,OAAOrJ,EAAAC,EAAAC,cAACoJ,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3B,KAAK,SAAA4B,GACjCA,EAAaC","file":"static/js/main.440eb27b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.scss';\r\n\r\nexport const Card = props => {\r\n    let classname = props.className || '';\r\n    return (\r\n        <div className={`card ${classname}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CardHeader = props => {\r\n    let classname = props.className || '';\r\n    return (\r\n        <div className={`card-header ${classname}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CardTitle = props => {\r\n    const classname = props.className || '';\r\n    const Tag = props.tag || 'h4';\r\n    return (\r\n        <Tag className={`card-title ${classname}`}>\r\n            {props.children}\r\n        </Tag>\r\n    )\r\n}\r\n\r\nexport const CardText = props => {\r\n    const classname = props.className || '';\r\n    return (\r\n        <p className={`card-text ${classname}`}>\r\n            {props.children}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport const CardBody = props => {\r\n    let classname = props.className || '';\r\n    return (\r\n        <div className={`card-body ${classname}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CardFooter = props => {\r\n    let classname = props.className || '';\r\n    return (\r\n        <div className={`card-footer ${classname}`}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardHeader, CardBody, CardTitle, CardText } from '../../ui';\r\n\r\nimport './style.scss';\r\n\r\nexport const Error = props => {\r\n    const status = props.status || '';\r\n    const message = props.message || 'Something went wrong';\r\n\r\n    return (\r\n        <Card className=\"error-viewer\">\r\n            <CardHeader>\r\n                <CardTitle className=\"text-danger\">Error {status}</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <CardText>{message}</CardText>\r\n                <Link to=\"/\" className=\"btn btn-info\">Go to home page</Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport const Loading = props => {\r\n    const classname = props.className || '';\r\n    return (\r\n        <div className={`loading-viewer ${classname}`}>\r\n            <div className=\"spinner-border\" role=\"status\"></div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport const Pagination = props => {\r\n  const pagesNumber = props.pagesNumber || null;\r\n  return (\r\n    <nav className=\"pagination-viewer\" aria-label=\"Page navigation\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <span className=\"page-link\" onClick={props.prevHandler}>Previous</span>\r\n        </li>\r\n        {\r\n          pagesNumber && [...Array(pagesNumber)].map((x, index) => {\r\n            return (\r\n              <li key={index} className=\"page-item\">\r\n                <span className=\"page-link\">{index + 1}</span>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n        <li className=\"page-item\" onClick={props.nextHandler}>\r\n          <span className=\"page-link\">Next</span>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import gql from 'graphql-tag';\r\n\r\nexport const GET_TREND_REPOS = gql`\r\nquery trendRepos($query: String!, $first: Int, $type: SearchType!, $after: String) {\r\n  search(query: $query, type: $type, first: $first, after: $after) {\r\n   repositoryCount\r\n   pageInfo {\r\n    endCursor\r\n    startCursor\r\n    hasNextPage\r\n   }\r\n   edges {\r\n    cursor\r\n    node {\r\n     ... on Repository {\r\n      id\r\n      name\r\n      createdAt \r\n      description\r\n      owner {\r\n       login\r\n       id\r\n       url\r\n      }\r\n     }\r\n    }\r\n   }\r\n  }\r\n }\r\n`;\r\n\r\nexport const GET_DETAILED_REPO = gql`\r\n  query detaildRepo($name: String!, $owner: String!, $moreDetail: Boolean = false) {\r\n    repository(owner: $owner, name: $name) {\r\n      id\r\n      name\r\n      createdAt \r\n      description \r\n      isArchived\r\n      isPrivate\r\n      url\r\n      stargazers {\r\n        totalCount\r\n      }\r\n      forks {\r\n        totalCount\r\n      }\r\n      owner {\r\n        login\r\n        id\r\n        url\r\n      }\r\n      licenseInfo @include(if: $moreDetail) {\r\n        key\r\n      }\r\n      defaultBranchRef @include(if: $moreDetail) {\r\n        target {\r\n        ... on Commit {\r\n          history(first:10) {\r\n            totalCount\r\n            edges {\r\n              node {\r\n                ... on Commit {\r\n                  committedDate\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React, { Component } from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardBody, CardHeader, CardTitle, CardText, CardFooter, Error, Loading, Pagination } from './ui';\r\nimport { GET_TREND_REPOS } from '../graphql';\r\n\r\nconst REPOS_PER_PAGE = 10;\r\n\r\nclass RepositoriesList extends Component {\r\n\r\n    _nextPage = data => {\r\n        // Current page\r\n        const page = parseInt(this.props.match.params.page, 10);\r\n        // Total pages number\r\n        const pagesNumber = data.search.repositoryCount / REPOS_PER_PAGE;\r\n        // Next page handler\r\n        if (page <= pagesNumber) {\r\n            const nextPage = page + 1;\r\n            this.props.history.push({\r\n                pathname: `/page/${nextPage}`,\r\n                state: {\r\n                    pageInfo: data.search.pageInfo,\r\n                    mode: 'next'\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    _previousPage = data => {\r\n        // Current page\r\n        const page = parseInt(this.props.match.params.page, 10);\r\n        // Previous page handler\r\n        if (page > 1) {\r\n            this.props.history.goBack();\r\n        }\r\n    }\r\n\r\n    _getQueryVariables = () => {\r\n        const isNewPage = this.props.location.pathname.includes('page');\r\n        // Get the page info\r\n        const pageInfo = this.props.location.state ? this.props.location.state.pageInfo : {};\r\n        // Push mode: Previous or Next\r\n        const mode = this.props.location.state ? this.props.location.state.mode : '';\r\n        \r\n        // Query variables        \r\n        const after = pageInfo.endCursor || null;\r\n        const before = pageInfo.endCursor || null;\r\n        const query = 'stars:>10000';\r\n        const type = 'REPOSITORY';\r\n        const first = isNewPage ? REPOS_PER_PAGE : 100;\r\n        const variables = { query, first, type };\r\n        if (after && mode === 'next') variables.after = after;\r\n        if (before && mode === 'prev') variables.before = before;\r\n        return variables;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-dark\">\r\n                <Query\r\n                    query={GET_TREND_REPOS}\r\n                    variables={this._getQueryVariables()}\r\n                >\r\n                    {\r\n                        ({ loading, error, data }) => {\r\n                            // Fetching data handler                            \r\n                            if (loading || !localStorage.getItem('token')) return <Loading />\r\n                            // Error Handler\r\n                            if (error) return <Error />\r\n                            // Success Handler\r\n                            return (\r\n                                <div className=\"content\">\r\n                                    <ReposListViewer data={data} />\r\n                                    <Pagination \r\n                                        nextHandler={() => this._nextPage(data)} \r\n                                        prevHandler={() => this._previousPage()} \r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    }\r\n                </Query>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ReposListViewer = props => {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {\r\n                    props.data.search.edges.map(repo => {\r\n                        repo = repo.node;\r\n                        const ownerName = repo.owner ? repo.owner.login : '';\r\n                        return (\r\n                            <div key={repo.id} className=\"col-12\">\r\n                                <Link to={`/${ownerName}/${repo.name}`}>\r\n                                    <Card>\r\n                                        <CardHeader>{ownerName}</CardHeader>\r\n                                        <CardBody>\r\n                                            <CardTitle>{repo.name}</CardTitle>\r\n                                            <CardText>{repo.description}</CardText>\r\n                                        </CardBody>\r\n                                        <CardFooter>{new Date(repo.createdAt).toString()}</CardFooter>\r\n                                    </Card>\r\n                                </Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RepositoriesList;","import React from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { Card, CardBody, CardHeader, CardTitle, CardText, CardFooter, Error, Loading } from './ui';\r\nimport { GET_DETAILED_REPO } from '../graphql';\r\n\r\nconst RepositoryDetail = ({ match: { params: { owner, name } } }) => {\r\n    return (\r\n        <div className=\"bg-dark single-card\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Query\r\n                            query={GET_DETAILED_REPO}\r\n                            variables={{\r\n                                name,\r\n                                owner\r\n                            }}\r\n                        >\r\n                            {\r\n                                ({ loading, error, data }) => {\r\n                                    if (loading) return <Loading />\r\n                                    if (error) return <Error />\r\n                                    if (!data) return <Error message=\"There is no available data found\" />\r\n                                    console.log(data);\r\n                                    const repo = data.repository || {};\r\n                                    const owner = repo.owner ? repo.owner : {};\r\n                                    const stars = repo.stargazers && repo.stargazers.totalCount;\r\n                                    const forks = repo.forks && repo.forks.totalCount;\r\n\r\n                                    return (\r\n                                        <Card key={repo.id}>\r\n                                            <CardHeader>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-4\">\r\n                                                        <a href={owner.url}>{owner.login} </a>\r\n                                                        <small className=\"text-muted\">{repo.isPrivate ? 'Private' : 'Public'}</small>\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">stars: {stars}</div>\r\n                                                    <div className=\"col-4\">forks: {forks}</div>\r\n                                                </div>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <CardTitle>\r\n                                                    {repo.name}\r\n                                                </CardTitle>\r\n                                                <CardText>{repo.description}</CardText>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-4\">\r\n\r\n                                                    </div>\r\n                                                    {repo.isArchived && <div className=\"col-4\">\r\n                                                        Archived\r\n                                                    </div>}\r\n                                                </div>\r\n                                            </CardBody>\r\n                                            <CardFooter>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-8\">\r\n                                                        {Date(repo.createdAt).toString()}\r\n                                                    </div>\r\n                                                    <div className=\"col-4\">\r\n                                                        <a href={repo.url} className=\"btn btn-primary\">Github</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardFooter>\r\n                                        </Card>\r\n                                    )\r\n                                }\r\n                            }\r\n                        </Query>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RepositoryDetail;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Loading } from './ui';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst CLIENT_ID = '53eff2996ef8cde22386';\r\nconst REDIRECT_URI = process.env.NODE_ENV === 'production' ? `https://wael-zoaiter.github.io${process.env.PUBLIC_URL}` : 'http://localhost:3000/';\r\n\r\nclass Authentication extends Component {\r\nconstructor(props) {\r\n  super(props)\r\n\r\n  this.state = {\r\n     isLoading: false,\r\n     token: null\r\n  }\r\n}\r\n\r\n    componentDidMount() {\r\n        const code = window.location.href.match(/\\?code=(.*)/) && window.location.href.match(/\\?code=(.*)/)[1];\r\n\r\n        if(code) {\r\n            this.setState({\r\n                isLoading: true\r\n            });\r\n            axios.get(`https://mygatekeeper.herokuapp.com/authenticate/${code}`)\r\n            .then((res) => {\r\n                if(res.data.token) localStorage.setItem('token', res.data.token);\r\n                this.setState({\r\n                    isLoading: false,\r\n                    token: res.data.token,\r\n                    error: res.data.error\r\n                });\r\n            }, (err) => console.log(err));\r\n        }\r\n    }\r\n    render() {        \r\n        return (\r\n        <div className=\"authentication bg-dark\">\r\n            {this.state.isLoading ? <Loading /> : this.state.token ? <Redirect to=\"/page/1\" /> : <a className=\"btn btn-light\" href={`https://github.com/login/oauth/authorize?client_id=${CLIENT_ID}&scope=user&redirect_uri=${REDIRECT_URI}`}>Login with Github</a>}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Authentication;","import React, { Component } from 'react';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-boost';\r\n\r\n\r\n// Components\r\nimport RepositoriesList from './components/RepositoriesList';\r\nimport RepositoryDetail from './components/RepositoryDetail';\r\nimport Authentication from './components/Authentication';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const client = new ApolloClient({\r\n      uri: \"https://api.github.com/graphql\",\r\n      headers: {\r\n        authorization: `Bearer ${localStorage.getItem('token')}`,\r\n      }\r\n    });\r\n    return (\r\n      <ApolloProvider client={client}>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Authentication} />\r\n            <Route exact path=\"/page/:page\" component={RepositoriesList} />\r\n            <Route exact path=\"/:owner/:name\" component={RepositoryDetail} />\r\n            <Route path=\"*\" component={() => <Redirect to=\"/\" />} />\r\n          </Switch>\r\n        </Router>\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}